.MobileMenuIcon_m1f18rpy{position:absolute;right:0;top:0;top:39px;left:auto;right:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;-webkit-text-decoration:underline;text-decoration:underline;z-index:var(--m1f18rpy-0);font-weight:var(--m1f18rpy-1);font-family:Obviously Extended;line-height:20px;}
.MobileSubMenuIcon_m1ih0prf{position:absolute;right:0;top:0;top:106px;left:auto;right:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;-webkit-text-decoration:underline;text-decoration:underline;z-index:var(--m1ih0prf-0);font-weight:var(--m1ih0prf-1);font-family:Obviously Extended;line-height:20px;}
.ActivePageIndicator_a53r7vg{position:absolute;right:0;top:78px;left:auto;right:0;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;font-family:Obviously Extended;font-weight:var(--a53r7vg-0);-webkit-text-decoration:var(--a53r7vg-1);text-decoration:var(--a53r7vg-1);z-index:var(--a53r7vg-2);line-height:20px;}
/*# sourceMappingURL=data:application/json;base64,*/